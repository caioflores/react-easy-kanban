{"version":3,"sources":["initial-data.js","Input.js","Task.js","Column.js","App.js","serviceWorker.js","index.js"],"names":["initialData","tasks","task1","id","content","task2","task3","task4","columns","column1","title","taskIds","column2","column3","columnOrder","Content","styled","p","_templateObject","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","status","setState","_this2","react_default","a","createElement","AutosizeInput_default","type","name","autoFocus","value","onChange","e","target","onClick","handleClick","inputStyle","color","textAlign","background","border","fontSize","wordWrap","wordBreak","outline","padding","alignSelf","minWidth","maxWidth","style","maxSize","React","Component","Container","div","Task_templateObject","isDragDisabled","isDragging","Task","handleChange","newState","objectSpread","task","disabled","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","Input_Input","Column_templateObject","Header","_templateObject2","TaskList","_templateObject3","isDraggingOver","InnerList","nextProps","map","Task_Task","key","Column","column","Column_Container","droppableId","droppableProps","Column_InnerList","placeholder","App_templateObject","_this$props","taskMap","taskId","Column_Column","PureComponent","App","onDragEnd","result","_objectSpread3","destination","source","home","foreign","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","defineProperty","newTaskIds","newColumn","newColumnOrder","direction","App_Container","columnId","App_InnerList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e66068a.chunk.js","sourcesContent":["const initialData = {\n  tasks: {\n    task1: { id: 'task1', content: 'Task 1' },\n    task2: { id: 'task2', content: 'Task 2' },\n    task3: { id: 'task3', content: 'Task 3' },\n    task4: { id: 'task4', content: 'Task 4' },\n  },\n  columns: {\n    column1: {\n      id: 'column1',\n      title: 'To do',\n      taskIds: ['task1', 'task2', 'task3', 'task4']\n    },\n    column2: {\n      id: 'column2',\n      title: 'Doing',\n      taskIds: []\n    },\n    column3: {\n      id: 'column3',\n      title: 'Done',\n      taskIds: []\n    }\n  },\n  columnOrder: ['column1', 'column2', 'column3']\n}\n\nexport default initialData;","import React from 'react'\nimport styled from 'styled-components'\nimport AutosizeInput from 'react-input-autosize'\n\nconst Content = styled.p`\n  color: white;\n  text-align: center;\n  background: transparent;\n  border: none;\n  font-size: 18px;\n  word-wrap: break-word;\n  word-break: break-all;\n  max-width: 150px;\n`\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      status: false\n    }\n  }\n\n  handleClick() {\n    this.setState({ status: !this.state.status })\n  }\n\n  render() {\n    return this.state.status ? (\n      <AutosizeInput\n        type=\"textarea\"\n        name=\"name\"\n        autoFocus\n        value={this.props.value}\n        onChange={e => this.props.onChange(e.target.value)} // TODO Solve this change\n        onClick={() => this.handleClick()}\n        inputStyle={{\n          color: 'white',\n          textAlign: 'center',\n          background: 'transparent',\n          border: 'none',\n          fontSize: '18px',\n          wordWrap: 'break-word',\n          wordBreak: 'break-all',\n          outline: 'none',\n          padding: '15px',\n          alignSelf: 'center',\n          minWidth: '80px',\n          maxWidth: '150px'\n        }}\n        style={{\n          maxSize: '150px'\n        }}\n      />\n    ) : (\n      <Content onClick={() => this.handleClick()}>{this.props.value}</Content>\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Draggable } from 'react-beautiful-dnd'\nimport Input from './Input'\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 10px;\n  padding: 20px;\n  background-color: ${props =>\n    props.isDragDisabled\n      ? 'lightgrey'\n      : props.isDragging\n        ? '#f9c8d9'\n        : 'lightblue'};\n  box-shadow: ${props =>\n    props.isDragging\n      ? '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);'\n      : '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)'};\n`\n\nexport default class Task extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...this.props }\n  }\n\n  handleChange = value => {\n    const newState = {\n      ...this.state\n    }\n  \n    newState.task.content = value\n    this.setState({ ...newState })\n  }\n\n  render() {\n    const isDragDisabled = this.props.task.disabled\n\n    return (\n      <Draggable\n        draggableId={this.props.task.id}\n        index={this.props.index}\n        isDragDisabled={isDragDisabled}\n      >\n        {(provided, snapshot) => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            <Input\n              value={this.props.task.content}\n              onChange={this.handleChange}\n              color='black' \n              />\n          </Container>\n        )}\n      </Draggable>\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Task from './Task'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport Input from './Input'\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n`\nconst Header = styled.div`\n  background-color: #000;\n  padding: 20px;\n`\n\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2 ease;\n  flex-grow: 1;\n  min-height: 100px;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : '#eeeeee')};\n`\n\nclass InnerList extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false\n    }\n    return true\n  }\n  render() {\n    return this.props.tasks.map((task, index) => (\n      <Task key={task.id} task={task} index={index} />\n    ))\n  }\n}\n\nexport default class Column extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...this.props }\n  }\n\n  handleChange = value => {\n    const newState = {\n      ...this.state\n    }\n\n    newState.column.title = value\n    this.setState({ ...newState })\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {provided => (\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\n            <Header {...provided.dragHandleProps}>\n              <Input\n                value={this.state.column.title}\n                onChange={this.handleChange}\n              />\n            </Header>\n            <Droppable droppableId={this.props.column.id} type=\"task\">\n              {(provided, snapshot) => (\n                <TaskList\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  <InnerList tasks={this.props.tasks} />\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          </Container>\n        )}\n      </Draggable>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\nimport './initial-data'\nimport Column from './Column'\nimport initialData from './initial-data'\n\nconst Container = styled.div`\n  display: flex;\n`\n\nclass InnerList extends React.PureComponent {\n  render() {\n    const { column, taskMap, index } = this.props\n    const tasks = column.taskIds.map(taskId => taskMap[taskId])\n    return <Column column={column} tasks={tasks} index={index} />\n  }\n}\n\nclass App extends Component {\n  state = initialData\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result\n\n    if (!destination) {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(this.state.columnOrder)\n      newColumnOrder.splice(source.index, 1)\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      const newState = {\n        ...this.state,\n        columnOrder: newColumnOrder\n      }\n\n      this.setState(newState)\n      return\n    }\n\n    const home = this.state.columns[source.droppableId]\n    const foreign = this.state.columns[destination.droppableId]\n\n    if (home === foreign) {\n      const newTaskIds = Array.from(home.taskIds)\n      newTaskIds.splice(source.index, 1)\n      newTaskIds.splice(destination.index, 0, draggableId)\n\n      const newColumn = {\n        ...home,\n        taskIds: newTaskIds\n      }\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      }\n\n      this.setState(newState)\n      return\n    }\n\n    const startTaskIds = Array.from(home.taskIds)\n    startTaskIds.splice(source.index, 1)\n    const newStart = {\n      ...home,\n      taskIds: startTaskIds\n    }\n\n    const finishTaskIds = Array.from(foreign.taskIds)\n    finishTaskIds.splice(destination.index, 0, draggableId)\n    const newFinish = {\n      ...foreign,\n      taskIds: finishTaskIds\n    }\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    }\n    this.setState(newState)\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {this.state.columnOrder.map((columnId, index) => {\n                const column = this.state.columns[columnId]\n                return (\n                  <InnerList\n                    key={column.id}\n                    column={column}\n                    taskMap={this.state.tasks}\n                    index={index}\n                  />\n                )\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}